library(fpp3)



### - TIDY DATA - ###



# read text file
input <- readLines("petrol.txt")

#insert line breaks
input <- gsub("],[", "\n", input, fixed = TRUE)

#remove "new Date"
input <- gsub("new Date", "", input, fixed = TRUE)

#remove parentheses and brackets
input <- gsub("[\\(\\)\\[\\]]", "", input, perl = TRUE)

#import cleaned data
DF <- read.csv(text = input, header = FALSE, quote = "'")
DF$V1 <- as.Date(DF$V1)
print(DF)
DF

# Convert data to tsibble

DF %>%
  mutate(V1 = as_date(V1)) %>%
  as_tsibble(index = V1) %>%
  select(V1, V2) %>%
  rename(Date = V1, cpl = V2) -> ts

# fill in missing dates for tsibble and plot 

tsibble::fill_gaps(ts) -> ts.filled

ts.filled %>%
  autoplot()

# interpolate missing cpl values using ARIMA

ts.filled %>%
  model(ARIMA(cpl,
              greedy = FALSE,
              approximation = FALSE,
              stepwise = FALSE)) -> auto.arima

auto.arima %>%
  interpolate(ts.filled) -> interp.ts



### - Exploratory Data Analysis - ###


# plot tsibble

interp.ts %>%
  autoplot()

# check daily seasonality + monthly seasonality - none detected

ts.filled %>% 
  gg_subseries(cpl,
               period = "week", labels = "both")

ts.filled %>% 
  gg_subseries(cpl,
               period = 31, labels = "both")

ts.filled %>%
  gg_season(cpl, period = "week")

ts.filled %>%
  gg_season(cpl, period = "year")

### - SPECIFY MODEL (ARIMA) - ###

# fit ARIMA model using 80% training data

interp.ts %>%
  slice(1:(n()-292)) -> training.data

training.data %>%
  autoplot()

# manual selection of ARIMA model

training.data %>%
  gg_tsdisplay()

training.data %>%
  features(cpl,unitroot_kpss)

training.data %>%
  mutate(diff_cpl = difference(cpl)) -> differenced.data

differenced.data %>%
  features(diff_cpl,unitroot_kpss)

# therefore dth order = 1, now determine p and q order by looking at acf/pacf plot

differenced.data %>%
  select(Date, diff_cpl) %>%
  gg_tsdisplay(plot_type = "partial")

# sinusoidal acf plot + signifiant spike at lag 1 in pacf plot, thus p = 1 
  
training.data %>%
  model(arimaAUTO = ARIMA(cpl, greedy = FALSE, approximation = FALSE, stepwise = FALSE),
        arima110 = ARIMA(cpl ~ pdq(1,1,0) + PDQ(0,0,0)),
        arima110xxx = ARIMA(cpl ~ pdq(1,1,0))) -> arima.fit

# check residuals of fit 

tidy(arima.fit)

arima.fit %>%
  select(arimaAUTO) %>%
  gg_tsresiduals()

arima.fit %>%
  select(arima110) %>%
  gg_tsresiduals()

arima.fit %>%
  select(arima110xxx) %>%
  gg_tsresiduals()

augment(arima.fit) %>%
  features(.innov, ljung_box, lag = 10, dof = 6)

# select arimaAUTO since there is still information in residuals for other models 

# forecast using arimaAUTO

arima.fit %>% 
  select(arimaAUTO) %>%
  forecast(h=292) -> arima.fc

arima.fc %>%
  autoplot() + autolayer(interp.ts)

# note: forecasts were too reliant on the interpolated data vs actual data
# so. will opt for removing only last 31 days for training data

# estimate ARIMA - train ARIMA using all but last 31 observations

interp.ts %>%
  slice(1:(n()-31)) -> training.data2


training.data2 %>% 
  model(arimaAUTO = ARIMA(cpl, stepwise = FALSE, greedy = FALSE, approximation = FALSE),
        arima110xxx = ARIMA(cpl ~ pdq(1,1,0)),
        arima110 = ARIMA(cpl ~ pdq(1,1,0) + PDQ(0,0,0))) -> arima.fit2

# check residuals

tidy(arima.fit2)

arima.fit2 %>%
  select(arimaAUTO) %>%
  gg_tsresiduals()

arima.fit2 %>%
  select(arima110) %>%
  gg_tsresiduals()

arima.fit2 %>%
  select(arima110xxx) %>%
  gg_tsresiduals()

augment(arima.fit2) %>%
  features(.innov, ljung_box, lag = 10, dof = 6)

# only the errors of arimaAUTO resemble white noise, therefore fc only with arimaAUTO

arima.fit2 %>%
  select(arimaAUTO) %>%
  forecast(h=31) -> arima.fc2

arima.fc2 %>%
  autoplot() + autolayer(interp.ts)

# plot close-up 

interp.ts %>%
  slice(1428:1458) -> recent.data

arima.fc2 %>%
  autoplot() + autolayer(recent.data)

# compute ARIMA accuracy 

accuracy(arima.fc2, recent.data) -> accuracy.arima



### - SPECIFY MODEL (ETS) - ###



# Estimate ETS - train ETS models using 80% of data

interp.ts %>%
  slice(1:(n()-292)) -> training.data

training.data %>%
  autoplot()

training.data %>%
  model(etsMNN = ETS(cpl ~ error("M") + trend("N") + season("N")),
        etsANN = ETS(cpl ~ error("A") + trend("N") + season("N")),
        etsAUTO = ETS(cpl)) -> ets.fit

ets.fit %>%
  forecast(h=292) %>% 
  autoplot() + autolayer(interp.ts)

# similar issue as before, most recent data is too close to the missing values

# Estimate ETS - train ETS models using all but last 31 days of total data 

interp.ts %>%
  slice(1:(n()-31)) -> training.data2

# for some reason, below code doesn't show etsANN

training.data2 %>%
  model(etsMNN = ETS(cpl ~ error("M") + trend("N") + season("N")),
        etsANN = ETS(cpl ~ error("A") + trend("N") + season("N")),
        etsAUTO = ETS(cpl)) -> ets.fit2

ets.fit2 %>%
  forecast(h=31) %>%
  autoplot() + autolayer(recent.data)

# separate etsANN model and will autolayer it at the end

training.data2 %>%
  model(etsANN = ETS(cpl ~ error("A") + trend("N") + season("N"))) -> etsANN.fit

training.data2 %>%
  model(etsMNN = ETS(cpl ~ error("M") + trend("N") + season("N")),
        etsAUTO = ETS(cpl)) -> etsMNN.etsAUTO.fit

etsMNN.etsAUTO.fit %>%
  forecast(h=31) -> etsMNN.etsAUTO.fc

etsANN.fit %>%
  forecast(h=31) -> etsANN.fc

# combine etsANN fc with other ets models
# etsANN is shown in dark blue with smaller prediction interval in below code

etsMNN.etsAUTO.fc %>%
  autoplot() + autolayer(etsANN.fc) + autolayer(recent.data)

# accuracy of ets

accuracy(etsMNN.etsAUTO.fc, recent.data) -> accuracy.etsMNN.ets.AUTO

accuracy(etsANN.fc, recent.data) -> accuracy.ets.ANN 

accuracy.etsMNN.ets.AUTO
accuracy.ets.ANN

# simple forecasting methods - baseline comparisons

simple.fit <- training.data2 %>%
  model(
    Mean = MEAN(cpl),
    `Naïve` = NAIVE(cpl),
    `Seasonal naïve` = SNAIVE(cpl),
    Drift = RW(cpl ~ drift())
  )

simple.fit %>%
  forecast(h=31) -> simple.fc

simple.fc %>% 
  autoplot(level=NULL) + autolayer(recent.data)


accuracy(simple.fc,recent.data) -> accuracy.simple

# compare plots of ETS, ARIMA and simple forecasts

etsMNN.etsAUTO.fc %>%
  autoplot(level = NULL) + 
  autolayer(etsANN.fc, level = NULL) + 
  autolayer(simple.fc, level = NULL) +
  autolayer(arima.fc2, level = NULL) +
  autolayer(recent.data)

# above plot for some reason doesn't show arimaAUTO, so will plot separately

arima.fc2 %>%
  autoplot() + autolayer(recent.data)


# compare accuracy of ETS, ARIMA and simple forecasts

accuracy.arima
accuracy.etsMNN.ets.AUTO
accuracy.ets.ANN
accuracy.simple

# since ETS, ARIMA and NAIVE are top 4 models - examine closely 

naive.fit <- training.data2 %>%
  model(`Naïve` = NAIVE(cpl))

naive.fit %>%
  forecast(h=31) -> naive.fc

training.data2 %>%
  model(etsMNN = ETS(cpl ~ error("M") + trend("N") + season("N")),
        etsANN = ETS(cpl ~ error("A") + trend("N") + season("N"))) -> ets.fit3

ets.fit3 %>%
  forecast(h=31) -> ets.fc3

naive.fc %>%
  autoplot() + autolayer(recent.data)

ets.fc3 %>%
  autoplot() + autolayer(recent.data)

arima.fc2 %>%
  autoplot() + autolayer(recent.data)


